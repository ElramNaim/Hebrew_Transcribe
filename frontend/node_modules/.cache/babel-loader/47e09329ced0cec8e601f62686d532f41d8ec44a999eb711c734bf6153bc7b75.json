{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\django-todo-react\\\\frontend\\\\src\\\\components\\\\SpeachToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcribedText, setTranscribedText] = useState(\"\");\n  const handleSpeechToText = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"audio_file\", e.target.audioFile.files[0]);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/SpeachToText/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setTranscribedText(response.data.transcribed_text);\n    } catch (error) {\n      console.error(\"Error transcribing speech:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      dir: \"\",\n      children: \"\\u05D4\\u05DE\\u05EA\\u05DE\\u05DC\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSpeechToText,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"audioFile\",\n        accept: \"audio/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Transcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), transcribedText && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transcribed Text: \", transcribedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"laqXhwHb4h6KYy9pfC30/5BwZE4=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SpeechToText","_s","transcribedText","setTranscribedText","handleSpeechToText","e","preventDefault","formData","FormData","append","target","audioFile","files","response","post","headers","data","transcribed_text","error","console","children","dir","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","accept","_c","$RefreshReg$"],"sources":["C:/web/django-todo-react/frontend/src/components/SpeachToText.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SpeechToText = () => {\r\n  const [transcribedText, setTranscribedText] = useState(\"\");\r\n\r\n  const handleSpeechToText = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"audio_file\", e.target.audioFile.files[0]);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:8000/api/SpeachToText/\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      setTranscribedText(response.data.transcribed_text);\r\n    } catch (error) {\r\n      console.error(\"Error transcribing speech:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 dir=\"\">המתמלל</h2>\r\n      <form onSubmit={handleSpeechToText}>\r\n        <input type=\"file\" name=\"audioFile\" accept=\"audio/*\" />\r\n        <button type=\"submit\">Transcribe</button>\r\n      </form>\r\n      {transcribedText && <p>Transcribed Text: {transcribedText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeechToText;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMQ,kBAAkB,GAAG,MAAOC,CAAC,IAAK;IACtCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEJ,CAAC,CAACK,MAAM,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE1D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAC/B,yCAAyC,EACzCP,QAAQ,EACR;QACEQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDZ,kBAAkB,CAACU,QAAQ,CAACG,IAAI,CAACC,gBAAgB,CAAC;IACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAIsB,GAAG,EAAC,EAAE;MAAAD,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAM2B,QAAQ,EAAEtB,kBAAmB;MAAAgB,QAAA,gBACjCrB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,MAAM,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvD1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACNvB,eAAe,iBAAIH,OAAA;MAAAqB,QAAA,GAAG,oBAAkB,EAAClB,eAAe;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlCID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}